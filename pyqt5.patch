diff --git a/qmlscene/pluginloader.cpp b/qmlscene/pluginloader.cpp
index 635d31e..2089eba 100644
--- a/qmlscene/pluginloader.cpp
+++ b/qmlscene/pluginloader.cpp
@@ -21,6 +21,7 @@
  */
 
 
+#include <iostream>
 #include <stdlib.h>
 
 #include <Python.h>
@@ -268,9 +269,22 @@ bool PyQt5QmlPlugin::callRegisterTypes(const QString &py_plugin,
 
     if (!plugin_type)
     {
+        const char * py_plugin_char_pointer = py_plugin.toLatin1().constData();
+        std::cout << "pluginloader.ccp debug: (void *) py_plugin_char_pointer " << (void *) py_plugin_char_pointer << "\n";
+        std::cout << "pluginloader.ccp debug: py_plugin_char_pointer bytes";
+        int length = 0;
+        for (int i = 0; i < 100; i++) {
+            int b = py_plugin_char_pointer[i];
+            std::cout << " " << b;
+            if (b == 0) {
+                length = i;
+                break;
+            }
+        }
+        std::cout << "pluginloader.ccp debug: py_plugin_char_pointer 0 byte at index " << length;
         PyErr_Format(PyExc_AttributeError,
                 "%s does not contain an implementation of QQmlExtensionPlugin",
-                py_plugin.toLatin1().constData());
+                py_plugin_char_pointer);
 
         Py_DECREF(plugin_mod);
         return false;
@@ -295,6 +309,19 @@ bool PyQt5QmlPlugin::callRegisterTypes(const QString &py_plugin,
         if (res_obj)
         {
 #if PY_MAJOR_VERSION >= 3
+            const char * py_plugin_char_pointer = py_plugin.toLatin1().constData();
+            std::cout << "pluginloader.ccp debug: (void *) res_obj " << (void *) res_obj << "\n";
+            std::cout << "pluginloader.ccp debug: res_obj bytes";
+            int length = 0;
+            for (int i = 0; i < 100; i++) {
+                int b = res_obj[i];
+                std::cout << " " << b;
+                if (b == 0) {
+                    length = i;
+                    break;
+                }
+            }
+            std::cout << "pluginloader.ccp debug: res_obj 0 byte at index " << length;
             PyErr_Format(PyExc_TypeError,
                     "unexpected result from registerTypes(): %S", res_obj);
 #else
@@ -412,6 +439,16 @@ PyObject *PyQt5QmlPlugin::getModuleAttr(const char *module, const char *attr)
 void PyQt5QmlPlugin::getSipAPI()
 {
 #if defined(SIP_USE_PYCAPSULE)
+    PyObject *mod = PyImport_ImportModule("PyQt5.sip");
+    if (!mod)
+    {
+        PyErr_Print();
+        return;
+    }
+    else
+    {
+        Py_DECREF(mod);
+    }
     sip = (const sipAPIDef *)PyCapsule_Import("PyQt5.sip._C_API", 0);
 #else
     PyObject *c_api = getModuleAttr("PyQt5.sip", "_C_API");
