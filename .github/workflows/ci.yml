name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  ci:
    runs-on: ${{ matrix.system.image }}
    strategy:
      fail-fast: false
      matrix:
        system:
          - image: windows-2016
            platform: windows
            aqt_name: win64_msvc2017_64
            qt_compiler: msvc2017_64
            vs_path: C:/Program Files (x86)/Microsoft Visual Studio/2017/Enterprise/VC/Auxiliary/Build/vcvars64.bat
            python_version: 3.8
            bitness: x64
          - image: ubuntu-18.04
            platform: linux
            aqt_name: gcc_64
            qt_compiler: gcc_64
            python_version: 3.8
            bitness: x64
          - image: macos-10.15
            platform: mac
            aqt_name: clang_64
            qt_compiler: clang_64
            python_version: 3.8
            bitness: x64
        versions:
          - qt: 5.14.1
            pyqt: 5.14.1

    env:
#      QT_COMPILER_DIRECTORY: ${{ env.QT_BASE_DIRECTORY }}/${{ matrix.qt }}/${{ matrix.arch.directory }}
      QT_VERSION: ${{ matrix.versions.qt }}
      QT_COMPILER: ${{ matrix.system.qt_compiler }}
      QT_ARCHITECTURE: ${{ matrix.system.aqt_name }}
      PYQT_VERSION: ${{ matrix.versions.pyqt }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1
#      - name: Install
#        run: |
#          pip install aqtinstall sip
#          PyQt5==${{ matrix.versions.pyqt }}
      - name: Set up Python ${{ matrix.system.python_version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.system.python_version }}
          architecture: ${{ matrix.system.bitness }}
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.system.platform == 'windows'
#      - name: Build wheel with Visual Studio
#        if: matrix.system.platform == 'windows'
#        run: |
#          "${{ matrix.system.vs_path }}"
#          pip wheel .
#          choco install visualstudio2019buildtools
      - name: Update pip and setuptools
        run: |
          python -m pip install --upgrade pip setuptools
      - name: Report info
        run: |
          git show --quiet HEAD
          python --version --version
          pip --version
          pip list
          pip freeze --all
      - name: Install dependencies
        if: matrix.system.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install libgl1-mesa-dev
      - name: Build wheel
#        if: matrix.system.platform != 'windows'
        run: |
          mkdir -p dist/
          pip wheel -vvv --no-deps --wheel-dir dist/ --no-clean .
#      - name: Download
#        run: |
#          venv/bin/pip download --no-deps --no-binary :all: --dest download PyQt5
#      - name: Test
#        run: |
#          tox -v -e "${{ matrix.toxenv }}"
      - name: Archive wheel
        uses: actions/upload-artifact@v1
        with:
          name: pyqt5-tools-${{ matrix.system.platform }}
          path: dist
      - name: Tree /tmp/pip-*
        shell: python
        run: |
          import os
          import pathlib
          import subprocess
          import tempfile

          fspath = getattr(os, 'fspath', str)

          temp = pathlib.Path(os.environ['BUILD_PATH'])

          subprocess.run(['pip', 'install', 'py-tree'])
          for path in temp.glob('pip-*'):
            subprocess.run(['py-tree', fspath(path)])
      - name: Archive temp
        uses: actions/upload-artifact@v1
        with:
          name: temp-${{ matrix.system.platform }}
          path: ${{ env['BUILD_PATH'] }}
